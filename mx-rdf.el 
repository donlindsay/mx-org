(defun mx:rdf-start (current-buffer)
  "Engage the MX-RDF subsystem."
  (interactive)
  (message "MX-RDF: ONLINE")
  (org-entry-put "MX-RS" "ONLINE")
  (setq org-global-properties '("MX-RDF" . "ONLINE")) 
  )

(defun mx:insert-drawer (org-element-entity-interpreter)
  (org-insert-property-drawer))

(defvar mx-rdf-drawer (drawer)
  '((org-insert-drawer . '((mx-org-hidden       . nil)
			   (mx-org-state        . nil)
			   (mx-org-properties   . nil)
			   (mx-rdfs-owl2        . nil)
			   (mx-n3               . nil))
		       )))

(defun mx:org-n3-properties
  (interactive)
  (setq org-custom-properties 
	'(("MX-RDF")
	  ("MX-SUBJX")
	  ("MX-PREDX")
	  ("MX-OBJEX")
	  ("MX-RULEZ")))
  (setq org-properties-postprocess-alist '("MX-RULEZ"
					   lambda("N3"))) )

(defconst mx-org-n3-triple '((mx-subjx     . (org-entry-get "MX-SUBJX"))
			     (mx-predx     . (org-entry-get "MX-PREDX"))
			     (mx-objex     . (org-entry-get "MX-OBJEX"))
			     (mx-rulez     . (org-entry-get "MX-RULEZ")))
  )
	

(defvar BEGIN_EXAMPLE (mx-rdf mx-rdf-property drawer)
  '((owl2-rdfs . '((doc-string  . "rdfs and owl2 markup element drawer")
                   (mx-rdf-type  . drawer))
	       )
    )
  )

(defvar END_EXAMPLE (mx-rdf mx-rdf-property drawer)
  '((owl2-rdfs . '((doc-string  . "rdfs and owl2 markup element drawer")
                   (mx-rdf-type . drawer)) ) ) )

(defvar mx-rdf-properties
  '((mx-rdf_all . mx-rdfs-type)
    (mx-rdf+    . mx-n3-predicate)
    (mx-rdf+    . mx-rdf-type)
    )
  )

(defun  or elisp via org-file-properties
   
     "You can set buffer-local values for the same purpose in the variable
     `org-file-properties' this by adding lines like
   
     (defvar PROPERTY: NAME VALUE"

org-entry-put-multivalued-property pom property &rest values



(defun  determine the significance of (:how) (:what) and (seq (:how :much))
(defun  TODO do i want a (defvar property: list of all owl2 and rdfs? 

(defvar property: mx-rdf_all          mx-rdf-rdfs-type
(defvar property: mx-rdf+             mx-rdf-predicate
(defvar property: mx-rdf-predicate    rdfs-type

(defun  drawers
(defvar drawer:   hidden state



	









